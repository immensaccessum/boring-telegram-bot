// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
const TelegramBot = require('node-telegram-bot-api');
const avatar = require('boring-avatars');
const fs = require('fs');
const ReactDOMServer = require('react-dom/server');
const React = require('react');
const sharp = require('sharp'); // –î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ PNG

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.TELEGRAM_BOT_TOKEN;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ª–∏ —Ç–æ–∫–µ–Ω
if (!token) {
    console.error('–û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ .env');
    process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

console.log('–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –î–æ–±–∞–≤–∏–ª–∏ currentColors –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–µ–≤—å—é
const userState = {}; // { chatId: { step, name, variant, awaitingColors, currentSvgString, previewMessageId, currentColors } }

// –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –∞–≤–∞—Ç–∞—Ä–æ–≤
const avatarVariants = ['marble', 'beam', 'pixel', 'sunset', 'ring', 'bauhaus'];
// –¶–≤–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const defaultColors = ['#92A1C6', '#146A7C', '#F0AB3D', '#C271B4', '#C20D90'];

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –ø–∞–ª–∏—Ç—Ä—ã
function generateRandomPalette(count = 5) {
    const palette = [];
    for (let i = 0; i < count; i++) {
        palette.push('#' + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0'));
    }
    return palette;
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG —Å—Ç—Ä–æ–∫–∏
function generateSvgString(name, variant, colors) {
    try {
        const avatarElement = React.createElement(avatar.default, {
            size: 800, // –†–∞–∑–º–µ—Ä –¥–ª—è PNG –ø—Ä–µ–≤—å—é
            name: name,
            variant: variant,
            colors: colors,
            square: true // –î–µ–ª–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º –¥–ª—è –ø—Ä–µ–≤—å—é
        });
        const svgString = ReactDOMServer.renderToStaticMarkup(avatarElement);
        if (typeof svgString !== 'string' || svgString.length === 0) {
            console.error("–û—à–∏–±–∫–∞: renderToStaticMarkup –Ω–µ –≤–µ—Ä–Ω—É–ª —Å—Ç—Ä–æ–∫—É SVG.");
            throw new Error('ReactDOMServer.renderToStaticMarkup –Ω–µ –≤–µ—Ä–Ω—É–ª –≤–∞–ª–∏–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É SVG');
        }
        return svgString;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG —Å—Ç—Ä–æ–∫–∏:', error);
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ SVG –≤ PNG Buffer
async function convertSvgToPng(svgString) {
    if (!svgString) return null;
    try {
        const pngBuffer = await sharp(Buffer.from(svgString))
            .png({ quality: 90 }) // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ PNG
            .toBuffer();
        return pngBuffer;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ SVG –≤ PNG —Å –ø–æ–º–æ—â—å—é sharp:', error);
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ PNG –ø—Ä–µ–≤—å—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
async function sendPngPreview(chatId, pngBuffer, currentState) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if (!pngBuffer || !currentState || !currentState.name || !currentState.variant || !currentState.currentSvgString || !currentState.currentColors) {
         console.error(`[${chatId}] –û—à–∏–±–∫–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–≤—å—é. State:`, currentState);
         bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –ø—Ä–µ–≤—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ /start.');
         delete userState[chatId]; // –û—á–∏—â–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
         return;
    }

    const { name, variant } = currentState;
    const caption = `–í–æ—Ç –ø—Ä–µ–≤—å—é –¥–ª—è "${name}" (—Å—Ç–∏–ª—å: ${variant}).\n–ß—Ç–æ –¥–∞–ª—å—à–µ?`;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥ –ø—Ä–µ–≤—å—é
    const keyboard = [
        [ // –ü–µ—Ä–≤—ã–π —Ä—è–¥
            { text: 'üé® –ù–æ–≤—ã–µ —Ü–≤–µ—Ç–∞', callback_data: 'regenerate_colors' }, // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–≤–µ—Ç–∞
            { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å', callback_data: 'change_style' }     // –°–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∏–ª—å
        ],
        [ // –í—Ç–æ—Ä–æ–π —Ä—è–¥
            { text: 'üíæ –ü–æ–ª—É—á–∏—Ç—å SVG', callback_data: 'get_current_svg' },      // –°–∫–∞—á–∞—Ç—å —Ç–µ–∫—É—â–∏–π SVG
            { text: 'üé® –î—Ä—É–≥–∏–µ —Ü–≤–µ—Ç–∞', callback_data: 'back_to_color_options' } // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –∑–∞–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
        ],
        [ // –¢—Ä–µ—Ç–∏–π —Ä—è–¥
            { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }
        ]
    ];

    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        const sentMessage = await bot.sendPhoto(chatId, pngBuffer, {
            caption: caption,
            reply_markup: {
                inline_keyboard: keyboard
            }
        });
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è
        if (userState[chatId]) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
             userState[chatId].previewMessageId = sentMessage.message_id;
             userState[chatId].step = 'preview'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        } else {
             console.warn(`[${chatId}] –°–æ—Å—Ç–æ—è–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –¥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è previewMessageId.`);
        }

    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ PNG –ø—Ä–µ–≤—å—é chatId=${chatId}:`, error.response ? error.response.body : error);
        bot.sendMessage(chatId, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        // –ù–µ —É–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤–æ–∑–º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (SVG -> PNG -> –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–≤—å—é)
async function startGenerationProcess(chatId, name, variant, colors, messageToEdit = null) {
    let workingMsg;
    try {
        if (messageToEdit) {
            // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            await bot.editMessageText(`‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∞–≤–∞—Ç–∞—Ä "${name}" (—Å—Ç–∏–ª—å: ${variant})...`, {
                chat_id: chatId,
                message_id: messageToEdit.message_id,
                reply_markup: {} // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
            });
            workingMsg = messageToEdit;
        } else {
            // –ò–Ω–∞—á–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            workingMsg = await bot.sendMessage(chatId, `‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∞–≤–∞—Ç–∞—Ä "${name}" (—Å—Ç–∏–ª—å: ${variant})...`);
        }

        const svgString = generateSvgString(name, variant, colors);
        if (!svgString) {
            await bot.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ SVG. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', { chat_id: chatId, message_id: workingMsg.message_id });
            delete userState[chatId];
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º SVG –∏ –¶–í–ï–¢–ê –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ PNG
        if (userState[chatId]) {
            userState[chatId].currentSvgString = svgString;
            userState[chatId].currentColors = colors; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
        } else {
            console.warn(`[${chatId}] –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º SVG/—Ü–≤–µ—Ç–æ–≤.`);
            await bot.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ /start', { chat_id: chatId, message_id: workingMsg.message_id });
            return;
        }

        const pngBuffer = await convertSvgToPng(svgString);
        if (!pngBuffer) {
            await bot.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ PNG. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', { chat_id: chatId, message_id: workingMsg.message_id });
            delete userState[chatId];
            return;
        }

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ì–µ–Ω–µ—Ä–∏—Ä—É—é..." –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø—Ä–µ–≤—å—é
        await bot.deleteMessage(chatId, workingMsg.message_id).catch(() => { /* –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —É–¥–∞–ª–µ–Ω–∏—è */ });
        workingMsg = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –ø—ã—Ç–∞—Ç—å—Å—è —É–¥–∞–ª–∏—Ç—å –µ—â–µ —Ä–∞–∑ –≤ catch

        await sendPngPreview(chatId, pngBuffer, userState[chatId]);

    } catch (error) {
        console.error(`[${chatId}] –û—à–∏–±–∫–∞ –≤ startGenerationProcess:`, error);
        if (workingMsg) { // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ì–µ–Ω–µ—Ä–∏—Ä—É—é" –µ—â–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ
            await bot.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ /start', { chat_id: chatId, message_id: workingMsg.message_id }).catch(() => { });
        } else {
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ /start').catch(() => { });
        }
        delete userState[chatId]; // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω–æ–π –æ—à–∏–±–∫–µ
    }
}


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π ---

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä Boring Avatars.\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É:\n`/avatar –¢–µ–∫—Å—Ç–î–ª—è–ê–≤–∞—Ç–∞—Ä–∞`\n\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —è –ø—Ä–µ–¥–ª–æ–∂—É –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å –∏ —Ü–≤–µ—Ç–∞. ‚ú®", {parse_mode: 'Markdown'});
    delete userState[chatId]; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
});

// –ö–æ–º–∞–Ω–¥–∞ /avatar [–∏–º—è]
bot.onText(/\/avatar (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const name = match[1].trim();

    if (!name) {
        bot.sendMessage(chatId, "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–∞–∫: `/avatar –ú–æ–µ–ò–º—è`");
        return;
    }
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userState[chatId] = { step: 'type', name: name };

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
    const typeKeyboard = avatarVariants.reduce((acc, variant, index) => {
        const button = { text: variant.charAt(0).toUpperCase() + variant.slice(1), callback_data: `select_type_${variant}` };
        if (index % 2 === 0) {
            acc.push([button]); // –ù–æ–≤—ã–π —Ä—è–¥
        } else {
            acc[acc.length - 1].push(button); // –î–æ–±–∞–≤–∏—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–±–µ—Ü
        }
        return acc;
    }, []);
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–º —Ä—è–¥–æ–º
    typeKeyboard.push([{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }]);

    const options = {
        reply_markup: {
            inline_keyboard: typeKeyboard
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞
    bot.sendMessage(chatId, `–û—Ç–ª–∏—á–Ω–æ! –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç: "${name}".\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å (—Ç–∏–ø) –∞–≤–∞—Ç–∞—Ä–∞:`, options);
});

// –ö–æ–º–∞–Ω–¥–∞ /avatar –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
bot.onText(/\/avatar$/, (msg) => {
     bot.sendMessage(msg.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: `/avatar –ú–æ–µ–ö–ª–∞—Å—Å–Ω–æ–µ–ò–º—è`");
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ (callback_query)
bot.on('callback_query', async (callbackQuery) => { // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    const msg = callbackQuery.message; // –°–æ–æ–±—â–µ–Ω–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏
    // –ò–Ω–æ–≥–¥–∞ msg –º–æ–∂–µ—Ç –±—ã—Ç—å undefined, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback
    if (!msg) {
        console.warn(`[${callbackQuery.from.id}] Callback ${callbackQuery.data} –ø–æ–ª—É—á–µ–Ω –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.`);
        bot.answerCallbackQuery(callbackQuery.id, { text: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ' });
        return;
    }
    const chatId = msg.chat.id;
    const data = callbackQuery.data;

    // –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ callback
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å { text: '...' } –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    bot.answerCallbackQuery(callbackQuery.id);

    // --- –õ–æ–≥–∏–∫–∞ –û—Ç–º–µ–Ω—ã ---
    if (data === 'cancel_creation') {
        const currentState = userState[chatId];
        delete userState[chatId]; // –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const messageText = '–°–æ–∑–¥–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.';
        const messageIdToEdit = currentState?.previewMessageId || msg.message_id; // ID –ø—Ä–µ–≤—å—é –∏–ª–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

        // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (—É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç)
        bot.editMessageText(messageText, {
            chat_id: chatId,
            message_id: messageIdToEdit,
            reply_markup: {} // –ü—É—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–±–∏—Ä–∞–µ—Ç –∫–Ω–æ–ø–∫–∏
        }).catch(err => {
            // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–æ –ø—Ä–µ–≤—å—é (—Ñ–æ—Ç–æ) –∏ –µ–≥–æ –Ω–µ–ª—å–∑—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç
            if (currentState?.previewMessageId === messageIdToEdit) {
                bot.deleteMessage(chatId, messageIdToEdit).catch(() => {/* –ò–≥–Ω–æ—Ä */}); // –£–¥–∞–ª—è–µ–º —Ñ–æ—Ç–æ
                bot.sendMessage(chatId, messageText); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            } else if (!(err.response && err.response.statusCode === 400)) { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º 400 –æ—à–∏–±–∫–∏ (message not modified etc.) –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                console.error(`[${chatId}] –û—à–∏–±–∫–∞ editMessageText –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ:`, err.response ? err.response.body : err);
            }
        });
        return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    }

    // --- –õ–æ–≥–∏–∫–∞ –í–æ–∑–≤—Ä–∞—Ç–∞ ---
     if (data === 'back_to_type_selection' || data === 'back_to_color_options') {
         const currentState = userState[chatId];
         // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
         if (!currentState || !currentState.name) {
             bot.sendMessage(chatId, "–û–π, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: `/avatar –í–∞—à–µ–ò–º—è`");
             // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —É —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
             bot.editMessageReplyMarkup({}, { chat_id: chatId, message_id: msg.message_id }).catch(()=>{});
             return;
         }

         // –ï—Å–ª–∏ –±—ã–ª–æ –ø—Ä–µ–≤—å—é, —É–¥–∞–ª—è–µ–º –µ–≥–æ
         if (currentState.previewMessageId) {
             bot.deleteMessage(chatId, currentState.previewMessageId).catch(()=>{});
             delete currentState.previewMessageId;
             delete currentState.currentSvgString;
             delete currentState.currentColors;
         }

         // –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –¢–ò–ü–ê
         if (data === 'back_to_type_selection') {
             currentState.step = 'type';
             delete currentState.variant; delete currentState.awaitingColors; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
             // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞–Ω–æ–≤–æ
             const typeKeyboard = avatarVariants.reduce((acc, variant, index) => {
                 const button = { text: variant.charAt(0).toUpperCase() + variant.slice(1), callback_data: `select_type_${variant}` };
                 if (index % 2 === 0) acc.push([button]); else acc[acc.length - 1].push(button); return acc;
             }, []);
             typeKeyboard.push([{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }]);
             const options = { reply_markup: { inline_keyboard: typeKeyboard } };
             // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ò–°–•–û–î–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ msg.message_id (–≥–¥–µ –±—ã–ª –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∏–ª–∏ —Ü–≤–µ—Ç–∞)
             bot.editMessageText(`–•–æ—Ä–æ—à–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å—Ç–∏–ª—è –¥–ª—è "${currentState.name}":`, {
                 chat_id: chatId, message_id: msg.message_id, ...options
             }).catch(error => { // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                 if (!(error.response && error.response.statusCode === 400)) {
                    console.error(`[${chatId}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ editMessageText (back_to_type):`, error.response ? error.response.body : error);
                 }
             });
             return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
         }

         // –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –°–ü–û–°–û–ë–ê –ó–ê–î–ê–ù–ò–Ø –¶–í–ï–¢–ê
         if (data === 'back_to_color_options') {
             if (!currentState.variant) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ç–∏–ø —É–∂–µ –≤—ã–±—Ä–∞–Ω
                 bot.sendMessage(chatId, "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å—Ç–∏–ª—è...");
                 // –í—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ç–∏–ø—É (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏–ª–∏ –∫–æ–ø–∏–ø–∞—Å—Ç–æ–º)
                 currentState.step = 'type'; delete currentState.variant; delete currentState.awaitingColors;
                 const typeKeyboard = avatarVariants.reduce((acc, variant, index) => { /* ... */ }); typeKeyboard.push(/*...*/);
                 const options = { reply_markup: { inline_keyboard: typeKeyboard } };
                 bot.editMessageText(`–•–æ—Ä–æ—à–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å—Ç–∏–ª—è –¥–ª—è "${currentState.name}":`, { chat_id: chatId, message_id: msg.message_id, ...options }).catch(()=>{});
                 return;
             }
             currentState.step = 'colors'; delete currentState.awaitingColors; // –£–±–∏—Ä–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –±—ã–ª–æ
             // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –∑–∞–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–∞
             const colorOptionsKeyboard = [
                [{ text: 'üé® –°–ª—É—á–∞–π–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞', callback_data: 'select_color_random' }],
                [{ text: 'üñåÔ∏è –¶–≤–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', callback_data: 'select_color_default' }],
                [{ text: '‚å®Ô∏è –í–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ —Ü–≤–µ—Ç–∞', callback_data: 'select_color_custom' }],
                [ // –†—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ù–∞–∑–∞–¥/–û—Ç–º–µ–Ω–∞
                    { text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ (–∫ —Å—Ç–∏–ª—é)', callback_data: 'back_to_type_selection' },
                    { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }
                ]
             ];
             const colorOptions = { reply_markup: { inline_keyboard: colorOptionsKeyboard } };
             // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ msg.message_id
             bot.editMessageText(`–°—Ç–∏–ª—å –≤—ã–±—Ä–∞–Ω: ${currentState.variant}.\n–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ü–≤–µ—Ç–∞–º–∏:`, {
                 chat_id: chatId, message_id: msg.message_id, ...colorOptions
             }).catch(error => { // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                 if (!(error.response && error.response.statusCode === 400)) {
                    console.error(`[${chatId}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ editMessageText (back_to_color):`, error.response ? error.response.body : error);
                 }
             });
             return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
         }
     }


    // --- –õ–æ–≥–∏–∫–∞ –í—ã–±–æ—Ä–∞ –¢–ò–ü–ê (–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏–ª–∏ –ü–æ—Å–ª–µ –°–º–µ–Ω—ã –°—Ç–∏–ª—è) ---
    if (data.startsWith('select_type_')) {
        const selectedVariant = data.replace('select_type_', '');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∏–ª–∏ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞ –ù–û–í–û–ì–û —Ç–∏–ø–∞
        if (!userState[chatId] || (userState[chatId].step !== 'type' && userState[chatId].step !== 'selecting_new_style')) {
            console.warn(`[${chatId}] –ü–æ–ª—É—á–µ–Ω callback ${data}, –Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ 'type' –∏ –Ω–µ 'selecting_new_style'. State:`, userState[chatId]);
            bot.answerCallbackQuery(callbackQuery.id, { text: '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ' });
            // –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            bot.editMessageReplyMarkup({}, { chat_id: chatId, message_id: msg.message_id }).catch(()=>{});
            return;
        }

        const currentState = userState[chatId];
        const previousStep = currentState.step; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        currentState.variant = selectedVariant;

        // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ ---
        if (previousStep === 'selecting_new_style') {
             // –ï—Å–ª–∏ –º—ã –ú–ï–ù–Ø–õ–ò —Å—Ç–∏–ª—å –ø–æ—Å–ª–µ –ø—Ä–µ–≤—å—é
             const { name, currentColors } = currentState;
             if (!name || !currentColors) {
                 console.error(`[${chatId}] –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç name –∏–ª–∏ currentColors –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç–∏–ª—è.`);
                 bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–µ—Ç –∏–º–µ–Ω–∏/—Ü–≤–µ—Ç–æ–≤). –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ /start.");
                 delete userState[chatId];
                 return;
             }
             // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é —Å –ù–û–í–´–ú —Å—Ç–∏–ª–µ–º –∏ –°–¢–ê–†–´–ú–ò —Ü–≤–µ—Ç–∞–º–∏,
             // —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Å—Ç–∏–ª—è
             currentState.step = 'generating'; // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —à–∞–≥
             await startGenerationProcess(chatId, name, selectedVariant, currentColors, msg);

        } else { // previousStep === 'type' (–∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞)
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Ü–≤–µ—Ç–æ–≤ (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
            currentState.step = 'colors';
            console.log(`[${chatId}] State –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞:`, JSON.stringify(currentState));

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –°–ü–û–°–û–ë–ê –∑–∞–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–∞
            const colorOptionsKeyboard = [
                [{ text: 'üé® –°–ª—É—á–∞–π–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞', callback_data: 'select_color_random' }],
                [{ text: 'üñåÔ∏è –¶–≤–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', callback_data: 'select_color_default' }],
                [{ text: '‚å®Ô∏è –í–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ —Ü–≤–µ—Ç–∞', callback_data: 'select_color_custom' }],
                [ { text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ (–∫ —Å—Ç–∏–ª—é)', callback_data: 'back_to_type_selection' }, { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' } ]
            ];
            const colorOptions = { reply_markup: { inline_keyboard: colorOptionsKeyboard } };

            // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ msg.message_id, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
            bot.editMessageText(`–°—Ç–∏–ª—å –≤—ã–±—Ä–∞–Ω: ${selectedVariant}.\n–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ü–≤–µ—Ç–∞–º–∏:`, {
                chat_id: chatId, message_id: msg.message_id, ...colorOptions
            }).catch(error => { // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                if (!(error.response && error.response.statusCode === 400)) { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º "message not modified"
                    console.error(`[${chatId}] –û–®–ò–ë–ö–ê editMessageText (—Ç–∏–ø -> —Ü–≤–µ—Ç):`, error.response ? error.response.body : error);
                }
            });
        }
        return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
    }

    // --- –õ–æ–≥–∏–∫–∞ –í—ã–±–æ—Ä–∞ –¶–í–ï–¢–û–í (–°–ø–æ—Å–æ–±–∞ –∑–∞–¥–∞–Ω–∏—è) ---
    if (data.startsWith('select_color_')) {
        const colorSelectionType = data.replace('select_color_', '');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (!userState[chatId] || userState[chatId].step !== 'colors' || !userState[chatId].name || !userState[chatId].variant) {
            console.warn(`[${chatId}] –ü–æ–ª—É—á–µ–Ω callback ${data} –≤ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. State:`, userState[chatId]);
            bot.answerCallbackQuery(callbackQuery.id, { text: '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ' });
            bot.editMessageReplyMarkup({}, { chat_id: chatId, message_id: msg.message_id }).catch(()=>{});
            return;
        }

        const currentState = userState[chatId];
        const { name, variant } = currentState;
        let colorsToUse;

        // –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–æ—Å–æ–±–∞ –∑–∞–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–∞
        bot.editMessageReplyMarkup({}, { chat_id: chatId, message_id: msg.message_id }).catch(()=>{});

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é/–∑–∞–ø—Ä–æ—Å –≤–≤–æ–¥–∞
        switch (colorSelectionType) {
            case 'random':
                colorsToUse = generateRandomPalette();
                currentState.step = 'generating'; // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —à–∞–≥
                await startGenerationProcess(chatId, name, variant, colorsToUse, msg);
                break;
            case 'default':
                colorsToUse = defaultColors;
                currentState.step = 'generating'; // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —à–∞–≥
                await startGenerationProcess(chatId, name, variant, colorsToUse, msg);
                break;
            case 'custom':
                currentState.awaitingColors = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è
                currentState.step = 'awaiting_custom_colors'; // –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —à–∞–≥
                 // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–µ–≤—Ä–∞—â–∞—è –µ–≥–æ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                 bot.editMessageText(`–•–æ—Ä–æ—à–æ. –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n\n*–ü—Ä–∏–º–µ—Ä:* 
#ff0000, 0000ff, #aabbcc
(–ú–æ–∂–Ω–æ —Å # –∏–ª–∏ –±–µ–∑, 3 –∏–ª–∏ 6 —Å–∏–º–≤–æ–ª–æ–≤ hex)`, {
                     chat_id: chatId,
                     message_id: msg.message_id,
                     reply_markup: {
                         inline_keyboard: [
                             // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤–µ—Ä–Ω–µ—Ç –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –∑–∞–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–∞ (random/default/custom)
                             [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ (–∫ –≤—ã–±–æ—Ä—É –ø–∞–ª–∏—Ç—Ä—ã)', callback_data: 'back_to_color_options' }],
                             [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }]
                         ]
                     },
                     parse_mode: 'Markdown'
                 }).catch(error => {
                     console.error(`[${chatId}] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤:`, error);
                 });
                 break;
        }
        return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
    }

    // --- –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –ø—Ä–µ–≤—å—é ---
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —à–∞–≥–µ –ø—Ä–µ–≤—å—é –∏ –µ—Å—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è
    if (userState[chatId]?.step === 'preview' && userState[chatId]?.previewMessageId === msg.message_id) {
        const currentState = userState[chatId];
        const { name, variant, previewMessageId, currentColors } = currentState; // –î–æ—Å—Ç–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

        // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¶–í–ï–¢–û–í
        if (data === 'regenerate_colors') {
            if (!name || !variant) { /* –î–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∞ */ return; } // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            const newColors = generateRandomPalette(); // –ù–æ–≤—ã–µ –°–õ–£–ß–ê–ô–ù–´–ï —Ü–≤–µ—Ç–∞

            bot.answerCallbackQuery(callbackQuery.id, { text: 'üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–µ —Ü–≤–µ—Ç–∞...' });

            const newSvgString = generateSvgString(name, variant, newColors); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –°–¢–ê–†–´–ô —Å—Ç–∏–ª—å
            if (!newSvgString) { bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ SVG."); return; }

            currentState.currentSvgString = newSvgString; // –û–±–Ω–æ–≤–ª—è–µ–º SVG
            currentState.currentColors = newColors; // –û–±–Ω–æ–≤–ª—è–µ–º –¶–í–ï–¢–ê –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏

            const newPngBuffer = await convertSvgToPng(newSvgString);
            if (!newPngBuffer) { bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ SVG –≤ PNG."); return; }

            // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ñ–æ—Ç–æ
            try {
                 const existingMarkup = callbackQuery.message.reply_markup; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                 await bot.editMessageMedia({
                    type: 'photo',
                    media: `attach://photo.png` // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ –Ω–∏–∂–µ
                 }, {
                    chat_id: chatId,
                    message_id: previewMessageId,
                    reply_markup: existingMarkup // –ü–µ—Ä–µ–¥–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                 }, { // –î–æ–ø. –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
                    photo: newPngBuffer // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤—ã–π PNG –±—É—Ñ–µ—Ä
                 });
                 // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–ø–æ–º—è–Ω—É—Ç—å —á—Ç–æ —Ü–≤–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã)
                 await bot.editMessageCaption(`–ü—Ä–µ–≤—å—é –¥–ª—è "${name}" (—Å—Ç–∏–ª—å: ${variant}). –¶–≤–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –ß—Ç–æ –¥–∞–ª—å—à–µ?`, {
                     chat_id: chatId,
                     message_id: previewMessageId,
                     reply_markup: existingMarkup // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–µ–º markup –µ—â–µ —Ä–∞–∑
                 });

            } catch (error) {
                 console.error(`[${chatId}] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–≤—å—é (editMessageMedia - regen colors):`, error.response ? error.response.body : error);
                 // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–µ –≤—ã—à–ª–æ (—Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ, API –∏–∑–º–µ–Ω–∏–ª—Å—è –∏ —Ç.–¥.)
                 bot.deleteMessage(chatId, previewMessageId).catch(()=>{}); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ
                 delete currentState.previewMessageId; // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π ID
                 await sendPngPreview(chatId, newPngBuffer, currentState); // –ü–æ—Å—ã–ª–∞–µ–º –∫–∞–∫ –Ω–æ–≤–æ–µ
            }
            return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
        }

        // –°–º–µ–Ω–∞ –°–¢–ò–õ–Ø
        if (data === 'change_style') {
             if (!name || !currentColors) { /* –î–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∞ */ return; }

            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø—Ä–µ–≤—å—é
            bot.deleteMessage(chatId, previewMessageId).catch(()=>{});
            delete currentState.previewMessageId; // –£–±–∏—Ä–∞–µ–º ID –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è

            // –ú–µ–Ω—è–µ–º —à–∞–≥, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–∞–∫ –≤—ã–±–æ—Ä –ù–û–í–û–ì–û —Ç–∏–ø–∞
            currentState.step = 'selecting_new_style';
            // currentSvgString –∏ currentColors –ù–ï —É–¥–∞–ª—è–µ–º - –æ–Ω–∏ –Ω—É–∂–Ω—ã

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
            const typeKeyboard = avatarVariants.reduce((acc, variant, index) => {
                const button = { text: variant.charAt(0).toUpperCase() + variant.slice(1), callback_data: `select_type_${variant}` };
                if (index % 2 === 0) acc.push([button]); else acc[acc.length - 1].push(button); return acc;
            }, []);
            typeKeyboard.push([{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_creation' }]);
            const options = { reply_markup: { inline_keyboard: typeKeyboard } };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Å—Ç–∏–ª—è
            bot.sendMessage(chatId, `–ú–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è "${name}". –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π:\n(–¢–µ–∫—É—â–∏–µ —Ü–≤–µ—Ç–∞ [${currentColors.join(', ')}] –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)`, options);
            return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
        }


        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ SVG
        if (data === 'get_current_svg') {
             const { currentSvgString } = currentState; // SVG –±–µ—Ä–µ–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
             if (!currentSvgString) { bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω SVG –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏."); return; }

             const svgBuffer = Buffer.from(currentSvgString, 'utf8');
             const safeName = name.replace(/[^a-z0-9–∞-—è—ë]/gi, '_').substring(0, 30); // –û—á–∏—â–∞–µ–º –∏–º—è –¥–ª—è —Ñ–∞–π–ª–∞
             const fileName = `${safeName}_${variant}.svg`; // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞

             try {
                  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º SVG –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
                  await bot.sendDocument(chatId, svgBuffer, {
                      caption: `‚úÖ –í–∞—à SVG —Ñ–∞–π–ª –¥–ª—è "${name}" –≥–æ—Ç–æ–≤!` // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É
                    }, {
                      filename: fileName, // –ò–º—è —Ñ–∞–π–ª–∞
                      contentType: 'image/svg+xml', // MIME-—Ç–∏–ø
                  });
                  console.log(`SVG –∞–≤–∞—Ç–∞—Ä –¥–ª—è "${name}" (${variant}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω chatId=${chatId}.`);

                  // –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏, —É–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É –ø—Ä–µ–≤—å—é
                  delete userState[chatId];
                  bot.editMessageReplyMarkup({}, { chat_id: chatId, message_id: previewMessageId })
                     .catch(err => {/* –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ (—Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ) */});

             } catch (error) {
                  console.error(`[${chatId}] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SVG –¥–æ–∫—É–º–µ–Ω—Ç–∞:`, error.response ? error.response.body : error);
                  bot.sendMessage(chatId, 'üòî –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SVG —Ñ–∞–π–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å SVG".');
                  // –ù–µ —É–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ, –¥–∞–µ–º —à–∞–Ω—Å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
             }
             return; // –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
        }
    } // –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞ if (step === 'preview')

    // –ï—Å–ª–∏ callback –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ –±–ª–æ–∫–æ–≤ –≤—ã—à–µ
    console.warn(`[${chatId}] –ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback_data: ${data} –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏:`, userState[chatId]);
    bot.answerCallbackQuery(callbackQuery.id, { text: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ' });
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –≤–≤–æ–¥–∞ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤)
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
    if (!text || text.startsWith('/')) {
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –±–æ—Ç –≤–≤–æ–¥–∞ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userState[chatId] && userState[chatId].step === 'awaiting_custom_colors') {
        const currentState = userState[chatId];
        const inputText = text;
        try {
            // –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
            const customColors = inputText.split(',')
                .map(c => c.trim()) // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
                .filter(c => c.length > 0) // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                .map(c => c.startsWith('#') ? c : `#${c}`); // –î–æ–±–∞–≤–ª—è–µ–º # –µ—Å–ª–∏ –Ω–µ—Ç

            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ HEX
            const hexRegex = /^#([0-9A-F]{3}|[0-9A-F]{6})$/i;
            const isValid = customColors.length > 0 && customColors.every(c => hexRegex.test(c));

            if (!isValid) {
                // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π, –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                bot.sendMessage(chatId, "üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–æ–≤. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ü–≤–µ—Ç–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç—ã–º–∏ –∏ —è–≤–ª—è—é—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º–∏ HEX-–∫–æ–¥–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `#ff0000, 00ff00, abc`). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
                // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ `awaitingColors`, –¥–∞–µ–º –µ—â–µ –ø–æ–ø—ã—Ç–∫—É
                return;
            }

            // –£–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –∏ –º–µ–Ω—è–µ–º —à–∞–≥
            delete currentState.awaitingColors;
            currentState.step = 'generating'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

            // –ú–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ –µ–≥–æ ID
            // if (currentState.instructionMessageId) {
            //     bot.deleteMessage(chatId, currentState.instructionMessageId).catch(()=>{});
            //     delete currentState.instructionMessageId;
            // }

            const { name, variant } = currentState; // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º—è –∏ —Ç–∏–ø

            // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
            await startGenerationProcess(chatId, name, variant, customColors);

        } catch (error) {
            console.error(`[${chatId}] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤:`, error);
            bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–∏—Ö —Ü–≤–µ—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /start.");
            // –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ awaiting_custom_colors –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å userState[chatId] –ø–æ–ª–Ω–æ—Å—Ç—å—é
        }
    } else if (userState[chatId] && userState[chatId].step && userState[chatId].step !== 'preview') {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–∫–æ–º-—Ç–æ —à–∞–≥–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–µ –ø—Ä–µ–≤—å—é), –Ω–æ –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        // bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π.");
    }
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
});


// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ---
bot.on('polling_error', (error) => {
    console.error(`Polling –æ—à–∏–±–∫–∞: ${error.code} ${error.message ? `- ${error.message}` : ''}`);
    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (error.response && error.response.statusCode === 401) {
        console.error("!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª! –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...");
        process.exit(1); // –í—ã—Ö–æ–¥, —á—Ç–æ–±—ã pm2 –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
    } else if (error.code === 'EFATAL') {
         console.error("!!! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–ø—Ä–æ—Å–∞ EFATAL. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Telegram.");
         // PM2 –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
    }
    // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ (ECONNRESET, ETIMEDOUT) –º–æ–≥—É—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏
});

bot.on('error', (error) => {
    console.error('–û–±—â–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('!!! –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: UNHANDLED REJECTION !!!');
  console.error('–ü—Ä–∏—á–∏–Ω–∞:', reason);
  // console.error('Promise:', promise); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ –ø—Ä–æ–º–∏—Å–∞
  // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
});

process.on('uncaughtException', (error, origin) => {
  console.error('!!! –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: UNCAUGHT EXCEPTION !!!');
  console.error('–û—à–∏–±–∫–∞:', error);
  console.error('–ò—Å—Ç–æ—á–Ω–∏–∫:', origin);
  // –ü–æ—Å–ª–µ 'uncaughtException' –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å. PM2 –µ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç.
  process.exit(1);
});

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã...');